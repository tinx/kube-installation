To Do:

 - add reboot + wait after package changes
 - configure repos for nodes to use rubix as a repo source
   - avoid installing internet surprise updates
   - don't forget to adjust kickstart file
 - preserve ssh hostkeys for nodes and rubix

 - if we install postfix, we may need to change its /etc/postfix/main.cf to say
  inet_interfaces = 127.0.0.1
  instead of
  #inet_interfaces = localhost
  to allow it to start.

 - always reboot after configuring network on rubix

 - notify about reboot after updates

 - use rubix's name instead of ip for update mirroring

 - after setting up the mirror, update yum cache

 - run ntpdate during ansible run
 - set hwclock
 - set timezone local, hwclock utc

 - monitoring
    - how long ago did the centos7 mirror script last run
    - are there new packages

 - move var defaults into defaults/main.yml from code in roles

 - disk setup plan:
    1. crypt
    2. lvm
    # 3. Ceph OSD
    # 4. CephFS

 - kube auto-update needs to be orchestrated
    - evacuate pods
    - disable Ceph node (mark osds as "out")
    - update
    - potentially reboot (but how to get the passphrase?)
    - enable Ceph node (mark osds as "in")
    - ensure Ceph is healthy + synchronized
    - health check for kubernetes

 - refactor kubes ansible code to run on just one kube
 - orchestrated re-install for multiple kubes

 - generate /etc/hosts on all nodes, for times when rubix is down
