---
#
# see http://docs.ceph.com/docs/master/install/install-storage-cluster/
#

#
# --- package and repo installation ---
#

- name: Install yum-plugin-priorities
  yum:
    name: yum-plugin-priorities
    state: present

- name: ensure yum-plugin-priorities is enabled
  ini_file:
    path: /etc/yum/pluginconf.d/priorities.conf
    section: main
    option: enabled
    value: 1
    mode: 0644
    backup: no

- name: configure ceph repo
  template:
    src: ceph.repo.j2
    dest: /etc/yum.repos.d/ceph.repo
    owner: root
    group: root
    mode: 0644
  vars:
    distro: el7

- name: configure epel repository
  yum:
    name: epel-release.noarch
    state: present

- name: install dependencies for ceph - snappy
  yum:
    name: snappy
    state: present
    update_cache: yes

- name: install dependencies for ceph - leveldb
  yum:
    name: leveldb
    state: present

- name: install dependencies for ceph - gdisk
  yum:
    name: gdisk
    state: present

- name: install dependencies for ceph - python-argparse
  yum:
    name: python-argparse
    state: present

- name: install dependencies for ceph - gperftools-libs
  yum:
    name: gperftools-libs
    state: present

- name: install ceph
  yum:
    name: ceph
    state: present

#
# --- keyrings and monitor configuration ---
#

- name: render ceph configuration file
  template:
    src: ceph.conf.j2
    dest: /etc/ceph/ceph.conf
    owner: root
    group: root
    mode: 0644

- name: create working directory for keyring generation
  file:
    path: '{{ kube_storage_ceph_scriptdir }}'
    state: directory
    owner: root
    group: root
    mode: 0700

- name: create directory /var/run/ansible for flag files
  file:
    path: '{{ kube_storage_ceph_flagdir }}'
    state: directory
    owner: ansible
    group: ansible
    mode: 0700

- name: render keyring generation script
  template:
    src: ceph-generate-keyrings.sh.j2
    dest: '{{ kube_storage_ceph_scriptdir }}/ceph-generate-keyrings.sh'
    owner: root
    group: root
    mode: 0700

- name: render ceph monitor configuration script
  template:
    src: ceph-configure-monitor.sh.j2
    dest: '{{ kube_storage_ceph_scriptdir }}/ceph-configure-monitor.sh'
    owner: root
    group: root
    mode: 0700

- name: check for presence of the flag file that indicates keyrings should be present
  stat:
    path: '{{ kube_storage_ceph_flagdir }}/ceph.keyrings.present'
    get_md5: no
  register: stat_result_ceph_keyrings_present

- name: assign mtime as a fact if the flag file exists
  set_fact:
    ceph_keyrings_mtime: stat_result_ceph_keyrings_present.stat.mtime
  when: stat_result_ceph_keyrings_present.stat.exists

- name: find the host among play_hosts with the earliest timestamp on the flag file
  set_fact:
    ceph_keyrings_source_host: "{{ play_hosts|map('extract', hostvars)|selectattr('ceph_keyrings_mtime','defined')|sort(attribute='ceph_keyrings_mtime')|map(attribute='ansible_hostname')|list|first }}"
  when: play_hosts|map('extract', hostvars)|selectattr('ceph_keyrings_mtime','defined')|list|count > 0

- name: run the key generation script on a single host if none were found - this should create the flag file
  run_once: true
  shell: '{{ kube_storage_ceph_scriptdir }}/ceph-generate-keyrings.sh'
  when: ceph_keyrings_source_host is not defined

# now we have 3 keyring files on the host this ran on:
#    '{{ kube_storage_ceph_scriptdir }}/ceph.mon.keyring'
#    /etc/ceph/ceph.client.admin.keyring                  owned by root.root
#    /var/lib/ceph/bootstrap-osd/ceph.keyring             owned by ceph.ceph
# and the flag file should exist

- name: re-check for presence of the flag file that indicates keyrings are present
  stat:
    path: '{{ kube_storage_ceph_flagdir }}/ceph.keyrings.present'
    get_md5: no
  register: stat_result_ceph_keyrings_present

- name: re-assign mtime as a fact if the flag file exists
  set_fact:
    ceph_keyrings_mtime: stat_result_ceph_keyrings_present.stat.mtime
  when: stat_result_ceph_keyrings_present.stat.exists

- name: find the host among play_hosts with the earliest timestamp on the flag file, but this time fail if none is found
  set_fact:
    ceph_keyrings_source_host: "{{ play_hosts|map('extract', hostvars)|selectattr('ceph_keyrings_mtime','defined')|sort(attribute='ceph_keyrings_mtime')|map(attribute='ansible_hostname')|list|first }}"

- name: obtain the ceph monitor keyring
  run_once: true
  delegate_to: '{{ ceph_keyrings_source_host }}'
  slurp:
    src: '{{ kube_storage_ceph_scriptdir }}/ceph.mon.keyring'
  register: ceph_monitor_keyring

- name: obtain the client admin keyring
  run_once: true
  delegate_to: '{{ ceph_keyrings_source_host }}'
  slurp:
    src: /etc/ceph/ceph.client.admin.keyring
  register: ceph_client_admin_keyring

- name: obtain the osd bootstrap keyring
  run_once: true
  delegate_to: '{{ ceph_keyrings_source_host }}'
  slurp:
    src: /var/lib/ceph/bootstrap-osd/ceph.keyring
  register: ceph_client_bootstrap_osd_keyring

- name: distribute ceph monitor keyring
  copy:
    dest: '{{ kube_storage_ceph_scriptdir }}/ceph.mon.keyring'
    content: "{{ ceph_monitor_keyring['content'] | b64decode }}"
    owner: root
    group: root
    mode: 0600

- name: distribute client admin keyring
  copy:
    dest: /etc/ceph/ceph.client.admin.keyring
    content: "{{ ceph_client_admin_keyring['content'] | b64decode }}"
    owner: root
    group: root
    mode: 0600

- name: distribute the osd bootstrap keyring
  copy:
    dest: /var/lib/ceph/bootstrap-osd/ceph.keyring
    content: "{{ ceph_client_bootstrap_osd_keyring['content'] | b64decode }}"
    owner: ceph
    group: ceph
    mode: 0600

- name: create the flag file if not present
  copy:
    content: ""
    dest: '{{ kube_storage_ceph_flagdir }}/ceph.keyrings.present'
    force: no
    group: root
    owner: root
    mode: 0644

- name: configure monitor, unless it already is configured
  shell: '{{ kube_storage_ceph_scriptdir }}/ceph-configure-monitor.sh'
  args:
    creates: '/var/lib/ceph/mon/{{ kube_storage_ceph_cluster_name }}-{{ ansible_hostname }}/done'

- name: start the monitor service if needed and set it up to start automatically
  service:
    name: 'ceph-mon@{{ ansible_hostname }}'
    enabled: yes
    state: started
